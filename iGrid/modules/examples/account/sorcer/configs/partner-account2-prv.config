/* 
* A SORCER Provider dependency injection definitions.
* It uses component entry names defined in the SORCER environmet
* and also defined by sorcer.core.provider.SorcerProvider.
*/
import net.jini.jrmp.*;
import net.jini.jeri.*;
import net.jini.jeri.tcp.*;
import sorcer.core.*;
import net.jini.core.entry.Entry;
import net.jini.lookup.entry.*;
import sorcer.core.provider.ServiceProvider;
import sorcer.core.provider.ui.*;
import sorcer.provider.account.*;
import sorcer.provider.account.ui.*;

sorcer.core.provider.ServiceProvider {
        /* service provider genetic properties */
		name = "Account2";
		description = "Example of a SORCER partneship proxy provider";
		location = "SORCER Lab, CP310 - CS TTU";
		interfaces = new String[] { "sorcer.provider.account.Account" };
		// add service UI
		entries = new Entry[] { AccountUI.getUIDescriptor(), 
			ServiceProvider.getUIDescriptor(), 
			new Comment("It uses sorcer.provider.account.Account for partnership"), 
			new Location("3", "310", "CP TTU") };
		//webster = "127.0.0.1";
		//websterPort = 9000;
		spaceEnabled = false;
		// persist and reuse service ID
		
		providerIdPersistent = false;
		// RMI object	
		server = new SorcerAccountImpl(new Money(20000));
		// exported with
		serverExporter = new BasicJeriExporter(TcpServerEndpoint.getInstance(0), new BasicILFactory());
		//serverExporter = new JrmpExporter(0);
		iconName="sorcer.jpg";
}
	

